meta {
  name: 01 Create staff token
  type: graphql
  seq: 1
}

post {
  url: {{API_URL}}
  body: graphql
  auth: none
}

body:graphql {
  mutation CreateStaffToken($email: String!, $password: String!) {
    tokenCreate(email: $email, password: $password) {
      user {
        id
      }
      token
      errors {
        message
        code
        field
      }
    }
  }
  
}

body:graphql:vars {
  {
      "email": "{{staffUserEmail}}",
      "password": "{{staffUserPassword}}"
  }
}

vars:post-response {
  staffToken: res.body.data.tokenCreate.token
}

script:pre-request {
  const { faker } = require('@faker-js/faker');
  
  const configuredEmail = bru.getProcessEnv("STAFF_USER_EMAIL");
  
  if (configuredEmail) {
    bru.setVar("staffUserEmail", configuredEmail);
  }
  
  const configuredPassword = bru.getProcessEnv("STAFF_USER_PASSWORD");
  
  if (configuredPassword) {
    bru.setVar("staffUserPassword", configuredPassword);
  }
}
